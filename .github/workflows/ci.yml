# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js for validation tools
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install HTML validator
      run: |
        npm install -g html-validate

    - name: HTML5 Validation (Alternative)
      run: |
        echo "üîç Running HTML validation..."
        npx html-validate index.html --config-presets html5 || echo "‚ö†Ô∏è HTML validation completed with warnings"

    - name: Check for sensitive data
      run: |
        echo "üîç Scanning for sensitive information..."
        if grep -r -i -E "(password|secret|token|api_key|private_key)" --exclude-dir=.git --exclude="*.yml" --exclude="*.md" .; then
          echo "‚ö†Ô∏è Potential sensitive information found"
          exit 1
        else
          echo "‚úÖ No sensitive information detected"
        fi

    - name: Check file permissions
      run: |
        echo "üîí Checking file permissions..."
        find . -type f -perm /111 -not -path "./.git/*" -not -name "*.sh" | while read file; do
          echo "‚ö†Ô∏è Executable file found: $file"
        done
        echo "‚úÖ File permission check completed"

    - name: Basic security headers check
      run: |
        echo "üõ°Ô∏è Validating security headers in HTML..."
        if grep -q "Content-Security-Policy" index.html; then
          echo "‚úÖ CSP header found"
        else
          echo "‚ùå CSP header missing"
          exit 1
        fi
        
        if grep -q "referrer" index.html; then
          echo "‚úÖ Referrer policy found"
        else
          echo "‚ùå Referrer policy missing"
          exit 1
        fi

    - name: Check image assets
      run: |
        echo "üñºÔ∏è Checking image assets..."
        if [ -f "./assets/images/character-illustration.png" ]; then
          echo "‚úÖ Character illustration found"
        else
          echo "‚ö†Ô∏è Character illustration missing"
        fi
        
        if [ -f "./assets/images/tg-qr-code.png" ]; then
          echo "‚úÖ QR code image found"
        else
          echo "‚ö†Ô∏è QR code image missing"
        fi

    - name: CSS Security Check
      run: |
        echo "üé® Checking CSS for security issues..."
        # Check for potentially dangerous CSS
        if grep -i "javascript:" index.html; then
          echo "‚ùå Dangerous javascript: protocol found in CSS"
          exit 1
        fi
        
        if grep -i "expression(" index.html; then
          echo "‚ùå CSS expression found (IE-specific security risk)"
          exit 1
        fi
        
        echo "‚úÖ CSS security check passed"

    - name: JavaScript Security Check
      run: |
        echo "üîß Checking JavaScript for security issues..."
        
        # Check for eval usage (we expect this to be disabled)
        if grep -i "window.eval.*throw" index.html; then
          echo "‚úÖ eval() is properly disabled"
        else
          echo "‚ö†Ô∏è eval() protection not found"
        fi
        
        # Check for XSS prevention
        if grep -i "sanitizeInput" index.html; then
          echo "‚úÖ Input sanitization found"
        else
          echo "‚ö†Ô∏è Input sanitization function not found"
        fi
        
        echo "‚úÖ JavaScript security check completed"

  performance-check:
    name: Performance & Accessibility
    runs-on: ubuntu-latest
    needs: security-scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python for local server
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Start local server and basic performance check
      run: |
        echo "üöÄ Starting local server for testing..."
        python -m http.server 8080 &
        SERVER_PID=$!
        sleep 3
        
        echo "üîç Testing basic connectivity..."
        curl -f http://localhost:8080/ > /dev/null || (echo "‚ùå Server not responding" && exit 1)
        
        echo "üìä Checking file sizes..."
        HTML_SIZE=$(stat -c%s "index.html")
        echo "HTML size: ${HTML_SIZE} bytes"
        
        if [ $HTML_SIZE -gt 500000 ]; then
          echo "‚ö†Ô∏è HTML file is quite large (${HTML_SIZE} bytes)"
        else
          echo "‚úÖ HTML file size is reasonable"
        fi
        
        kill $SERVER_PID
        
    - name: Accessibility Basic Check
      run: |
        echo "‚ôø Checking basic accessibility features..."
        
        # Check for alt attributes
        if grep -o 'img.*alt=' index.html | wc -l | grep -q '[1-9]'; then
          echo "‚úÖ Alt attributes found on images"
        else
          echo "‚ö†Ô∏è No alt attributes found"
        fi
        
        # Check for ARIA labels
        if grep -q 'aria-' index.html; then
          echo "‚úÖ ARIA attributes found"
        else
          echo "‚ö†Ô∏è No ARIA attributes found"
        fi
        
        # Check for semantic HTML
        if grep -q '<main>\|<section>\|<article>\|<header>' index.html; then
          echo "‚úÖ Semantic HTML elements found"
        else
          echo "‚ö†Ô∏è Consider using more semantic HTML elements"
        fi
